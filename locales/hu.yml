abroot:
  use: "abroot"
  long: "Az ABRoot teljes változtathatatlanságot és atomicitást biztosít azáltal,\
    \ hogy tranzakciókat hajt végre 2 gyökérpartíció között (A<->B)."
  short: "Az ABRoot teljes változtathatatlanságot és atomicitást biztosít azáltal,\
    \ hogy tranzakciókat hajt végre 2 gyökérpartíció között (A<->B)."
  verboseFlag: "részletesebb kimenet megjelenítése"

update:
  use: "_update-boot"
  long: "A rendszerindító partíció frissítése karbantartás céljából (csak haladó felhasználók\
    \ számára)"
  short: "A boot partíció frissítése"
  forceUpdateFlag: "a boot partíció kényszerfrissítése megerősítés kérése nélkül"
  confirm: "Biztos, hogy folytatni akarja?\nA bootpartíciót csak akkor kell frissíteni,\
    \ ha a tranzakció sikeres volt. Ezt a\nparancsot haladó csak felhasználóknak érdemes\
    \ használniuk karbantartási célokra."
  rootRequired: "A parancs futtatásához root rendszergazdának kell lennie."

get:
  use: "get"
  long: "A gyökérpartíció jelenlegi vagy jövőbeli állapotának (A vagy B) kimenete"
  short: "A gyökérpartíció jelenlegi vagy jövőbeli állapotának (A vagy B) kimenete"
  rootRequired: "A parancs futtatásához root rendszergazdának kell lennie."

kargs:
  use: "kargs"
  long: "A rendszermag paramétereinek kezelése."
  short: "A rendszermag paramétereinek kezelése."
  rootRequired: "A parancs futtatásához root rendszergazdának kell lennie."
  nextReboot: "A rendszermag paraméterei a következő rendszerindításkor kerülnek alkalmazásra."
  failedTransaction: "Nem sikerült elindítani a tranzakciós héjat:"
  stateRequired: "Kérjük, adjon meg egy állapotot (jelenlegi vagy jövőbeli)"
  params: "Az aktuális partíció paraméterei:\n%s\n"
  futureParams: "A jövőbeli partíció paraméterei:\n%s\n"
  unknownState: "Ismeretlen állapot: %s\n"
  unknownParam: "Ismeretlen paraméter: %s\n"
  transactionsLocked: "Another transaction has already been executed, you must reboot\
    \ your system before starting a new transaction."

edit:
  use: "edit"
  long: "edit kernel parameters."
  short: "edit kernel parameters."
  rootRequired: "You must be root to run this command."

exec:
  use: "exec"
  long: "Execute a command in a transactional shell in the future root and switch\
    \ to it on next boot"
  short: "Execute a command in a transactional shell in the future root and switch\
    \ to it on next boot"
  rootRequired: "You must be root to run this command."
  skipDiffFlag: "Skip the diff check at the end of the transaction"
  forceRunFlag: "Force run the command without asking for confirmation"
  confirm: "\n===============================================================================\n\
    PLEASE READ CAREFULLY BEFORE PROCEEDING\n===============================================================================\n\
    Changes made in the shell will be applied to the future root on next boot on\n\
    successful.\nRunning a command in a transactional shell is meant to be used by\
    \ advanced users\nfor maintenance purposes.\n\nIf you ended up here trying to\
    \ install an application, consider using\nFlatpak/Appimage or Apx (apx install\
    \ package) instead.\n\nRead more about ABRoot at [https://documentation.vanillaos.org/docs/ABRoot/].\n\
    \nAre you sure you want to proceed?"
  start: "New transaction started. This may take a while...\nDo not reboot or cancel\
    \ the transaction until it is finished."
  success: "Transaction completed successfully. Reboot to apply changes."
  failed: "Failed to start transactional shell:"

shell:
  use: "shell"
  long: "Enter a transactional shell in the future root partition and switch root\
    \ on the next boot"
  short: "Enter a transactional shell"
  rootRequired: "You must be root to run this command."
  forceOpenFlag: "Force open the shell without asking for confirmation"
  confirm: "\n===============================================================================\n\
    PLEASE READ CAREFULLY BEFORE PROCEEDING\n===============================================================================\n\
    Changes made in the shell will be applied to the future root on next boot on\n\
    successful.\nRunning a command in a transactional shell is meant to be used by\
    \ advanced users\nfor maintenance purposes.\n\nIf you ended up here trying to\
    \ install an application, consider using\nFlatpak/Appimage or Apx (apx install\
    \ package) instead.\n\nRead more about ABRoot at [https://documentation.vanillaos.org/docs/ABRoot/].\n\
    \nAre you sure you want to proceed?"
  start: "New transaction started. This may take a while...\nDo not reboot or cancel\
    \ the transaction until it is finished."
  success: "Transaction completed successfully. Reboot to apply changes."
  failed: "Failed to start transactional shell:"

diff:
  use: "diff"
  long: "List modifications made to the filesystem in the latest transiction"
  short: "Show modifications from latest transaction."
  rootRequired: "You must be root to run this command."

rollback:
  use: "rollback"
  long: "Executes a system rollback, discarding changes made to the present root."
  short: "Return the system to a previous state."
  rootRequired: "You must be root to run this command."
